{"name":"Rswmm","tagline":"Autocalibration for EPA Stormwater Management Model (SWMM) version 5.  You're fully responsible for the any problems related to this software - I'm not maintaining it because I am working on a similar, separate and larger programming effort.","body":"# RSWMM\r\n<h3>Autocalibration for EPA Stormwater Management Model (SWMM) version 5 using multi- or single objective optimization in R.\r\n</h3><h5>\r\nYou're fully responsible for the any problems related to this software - I'm not maintaining it because I am working on a similar, separate and larger programming effort (in parallelized Python not R). RSWMM is only a proof of concept.\r\n</h5>\r\n<pre>\r\nVersion 1: December 2011\r\nRevision 1.1: January 1/10/2012, corrected problem in binary file reader\r\nGeneral Notes\r\nBefore editing this script do the following things:\r\nMove your SWMM file to a directory that can hold a lot of files\r\nTest that you can run your SWMM file from this directory and you haven't messed up paths to files or something\r\nTake your SWMM input file and replace the uncertain parameters with codes like<code><pre>\r\n   $1$, $2$,  $3$\r\n   </pre></code>\r\nYou can repeat codes if you want the optimization algorithm to repeat a parameter.\r\nFor example, if you know 2 subcatchments should have the same infiltration rate, you\r\n can put the same code in for their infiltration rates and they will receive the same parameter\r\nCreate a parameter bounds CSV file that looks like this (without the comment sign ):\r\n</pre>\r\n<code><pre>\r\n                 Code,Minimum,Maximum,Initial\r\n                 $1$,10,32,15\r\n                 $2$,10,31,20\r\n                 $3$,4,15,5\r\n                 $4$,2,8,7\r\n                 $5$,25,100,33\r\n                 $6$,20,75,33\r\n                 $7$,20,60,50\r\n</pre></code>\r\nCreate a calibration time series data CSV that looks like this (without the comment sign ):\r\n<code><pre>\r\nDate      ,(CFS)\r\n1/1/07 0:01,0.08\r\n1/1/07 0:02,0.22\r\n1/1/07 0:03,0.38\r\n1/1/07 0:04,0.54\r\n1/1/07 0:05,0.67\r\n1/1/07 0:06,0.83\r\n</pre></code>\r\n<pre>\r\nREMEMBER YOU HAVE TO USE DOUBLE BACKSLASHES FOR ALL FILENAMES\r\nYou have to manually create all directories you provide.  RSWMM does not make directories.\r\nPreliminaries: clear workspace and source the RSWMM code for a function library\r\nedit this source line to reflect where you have saved RSWMM.r.\r\nIf you are doing a calibration run, you need to provide the following lines\r\n to direct the optimizer to your files\r\nCalibration Data should be in a CSV with datetimes in the first column,\r\nand data in the second column\r\nThe text file is assumed to have a one line header\r\nCall this function with the correct dateFormat for your datetimes\r\nthe dateFormat is passed to strptime, so look for formatting information there\r\nfor example, dates like this 1/1/07 12:00, can be read with the default dateFormat\r\ne.g.:\r\n</pre>\r\n<code><pre>\r\nDate      ,(CFS)\r\n1/1/07 0:01,0.08\r\n1/1/07 0:02,0.22\r\n1/1/07 0:03,0.38\r\n1/1/07 0:04,0.54\r\n1/1/07 0:05,0.67\r\n1/1/07 0:06,0.83\r\n</pre></code>\r\n<pre>\r\nif you have a non-stadard date format, you can provide that as an argument below, but in either case\r\n you have to call the function that reads the calData\r\ngetCalDataFromCSV(CSVFile=calDataCSV,dateFormat=\"%m/%d/%y %H:%M\")\r\nProvide a path for the CSV containing optimization history.  This is an empty file to start out.\r\nMake sure you have created the directories that will hold this file\r\nProvide a path for the CSV containing parameter bounds\r\nFor ease, make your parameter bounds file in this format (without the comment symbols):\r\n</pre>\r\n<code><pre>\r\n                 Code,Minimum,Maximum,Initial\r\n                 $1$,10,32,15\r\n                 $2$,10,31,20\r\n                 $3$,4,15,5\r\n                 $4$,2,8,7\r\n                 $5$,25,100,33\r\n                 $6$,20,75,33\r\n                 $7$,20,60,50\r\n</pre></code>\r\n<pre>\r\nInitialize the iteration count and the optimization history, in case you\r\nwant to stop the model before the optimization function is complete. If you\r\n press the STOP button before the optimzation function returns, you can check your\r\ncsv provided above or the variable optimizationHistory for intermediate results\r\nSelect single or multiobjective optimization by setting one of the two following variables to TRUE\r\nSet useOptim to TRUE if you are doing single objective optimization, otherwise FALSE\r\nset useMCO to TRUE if you are doing multiobjective optimization, otherwise FALSE\r\n\r\nSingle Objective Calibration Begins Here\r\n\r\nIf you are doing multi-objective optimization, this section is ignored\r\nProvide options for single objective optimization\r\nInitialize the options object\r\nPick one of six methods for calibration:\r\n may be one of  = c(\"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\", \"Brent\"),\r\nLook at the documentation in RSWMM.R for the getSWMMTimeSeriesData function\r\nto develop a function call that returns your time series\r\n of interest from the SWMM binary file\r\n a few notes on this funtion:\r\nyou always have to pass in headobj=headobj.  This is so that you don't reread the header on every iteration\r\nyou select an iType, which determines whether you are looking for a node, link, subcatchment, or system variable\r\nyou provide a vIndex, which is the parameter you want to return (e.g. depth)\r\nyou provide the nameInOutputFile.  This will be the same as the node, link, or subcatchment number in the input file.\r\nif you are getting a system variable's results, you can leave nameInOutputFile as \"\"\r\nyou should provide a function call in quotes that will subsequently be evaled in the objective function\r\nPut the parameter bounds and intialization in the optimization options: you shouldn't need to change these\r\n lines if you have imported them using RSWMM formats/functions\r\nProvide a base name for the input/output files that are created\r\nRSWMM will add the necessary extensions.  It also adds random text so that it is thread safe, and\r\n you can run more than one RSWMM.r optimization at the same time\r\nProvide a SWMM template file that has the replacement codes\r\nProvide a path to SWMM.exe.  The binary file reader is written for SWMM 5.0.022.  For earlier versions of SWMM,\r\n you would have to edit the binary file reader because the output format has changed.\r\nLook at RSWMM.R's performanceStatsAsMinimization function and select one of the performance statistics\r\nThe following function call does the optimization.  It should not need any edits,\r\nunless you want to look at the optim function documentation and provide more specific\r\n control parameters.\r\nset the working directory in R to be the directory of the swmm template so that LID reports \r\nshow up in the right place this is a 1/24/2012 edit\r\n\r\nEnd of Single Objective Calibration Section\r\n\r\n\r\n Start of Multiobjective Optimization \r\n\r\nIf you are doing single objective optimization by setting useOptim to TRUE, this\r\nsection is ignored.\r\ninitialize the multiobjective optimization options object\r\nLook at the documentation in RSWMM.R for the getSWMMTimeSeriesData function\r\nto develop a function call that returns your time series\r\n of interest from the SWMM binary file\r\n a few notes on this funtion:\r\nyou always have to pass in headobj=headobj.  This is so that you don't reread the header on every iteration\r\nyou select an iType, which determines whether you are looking for a node, link, subcatchment, or system variable\r\nyou provide a vIndex, which is the parameter you want to return (e.g. depth)\r\nyou provide the nameInOutputFile.  This will be the same as the node, link, or subcatchment number in the input file.\r\nif you are getting a system variable's results, you can leave nameInOutputFile as \"\"\r\nyou should provide a function call in quotes that will subsequently be evaled in the objective function\r\nProvide upper and lower bounds.  No need to edit these lines if you have imported parameters using RSWMM functions/formats\r\nProvide path to SWMM.exe\r\nSelect one or more performance stats listed in RSWMM.R\r\nProvide a base output name for SWMM input/output files\r\nProvide a path to your SWMM template file with replacement codes in it\r\nset the working directory in R to be the directory of the swmm template so that LID reports \r\nshow up in the right place this is a 1/24/2012 edit\r\nThis is the function call to NSGA2.  Change this if\r\n you want to further control the process.  (See the documentation for mco package: NSGS2 function)\r\n\r\nEND of multiobjective optimization\r\n\r\n<pre>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}