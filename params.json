{"name":"Rswmm","tagline":"Autocalibration for EPA Stormwater Management Model (SWMM) version 5.  You're fully responsible for the any problems related to this software - I'm not maintaining it because I am working on a similar, separate and larger programming effort.","body":"# RSWMM\r\n<h3>Autocalibration for EPA Stormwater Management Model (SWMM) version 5 using multi- or single objective optimization in R.\r\n</h3>\r\n<h5>You're fully responsible for the any problems related to this software - I'm not maintaining it currently.  It was tested with 5.0.022.  It looks like if moving to SWMM version 5.1+, the binary file reader in RSWMM.r would have to be changed (probably a minor change). See item 33 under \"Build 5.1.001 (3/24/2014)\" on this<a href=\"http://www2.epa.gov/sites/production/files/2014-10/epaswmm5_updates_0.txt\"> EPA page listing SWMM changes by version.</a></h5>\r\n<h6>Synopsis:</h6><p>This R code runs a SWMM input text file repeatedly with modification of the text file based on the last SWMM output and the next trial parameters selected by R optimization code.  The prerequisites for using the code are having a SWMM input file, calibration data, willingness to read code (it's not that bad :)), and willingness to check the output closely as the code is experimental.  These scripts currently only do autocalibration.</p>\r\n<h6>I am working on a similar, separate and larger programming effort (in parallelized Python not R). RSWMM is only a proof of concept. The new effort extends these ideas to a more flexible interface and tiered design optimization.  If you are interested in any of that, or have any feedback on RSWMM, please let me know (see below) </h6>\r\n<h4>Summary of How to Use this Code Efficiently</h4>\r\n<ol>\r\n<li>Get a SWMM .inp input text file</li>\r\n<li>Read below (a cut and paste of runRSWMM.r) and note each comment's warnings</li>\r\n<li>Choose multi- or single objective</li>\r\n<li>Get your calibration time series CSV in the right format, or use an argument to accomodate your format</li>\r\n<li>Run it after making sure you have disk space or you have edited the code to programmatically delete files</li>\r\n</ol>\r\n<h4>runSWMM.r is quoted below.  It is just a lot of help comments around R function calls that use SWMM binary file reader as part of autocalibration.</h4>\r\n<pre>\r\n#runRSWMM Developed by Peter Steinberg\r\n#Version 1: December 2011\r\n#Revision 1.1: January 1/10/2012, corrected problem in binary file reader\r\n\r\n#General Notes\r\n#Before editing this script do the following things:\r\n#Move your SWMM file to a directory that can hold a lot of files\r\n#Test that you can run your SWMM file from this directory and you haven't messed up paths to files or something\r\n#Take your SWMM input file and replace the uncertain parameters with codes like\r\n#   $1$, $2$,  $3$\r\n#You can repeat codes if you want the optimization algorithm to repeat a parameter.\r\n#For example, if you know 2 subcatchments should have the same infiltration rate, you\r\n# can put the same code in for their infiltration rates and they will receive the same parameter\r\n#Create a parameter bounds CSV file that looks like this (without the comment sign #):\r\n#                 Code,Minimum,Maximum,Initial\r\n#                 $1$,10,32,15\r\n#                 $2$,10,31,20\r\n#                 $3$,4,15,5\r\n#                 $4$,2,8,7\r\n#                 $5$,25,100,33\r\n#                 $6$,20,75,33\r\n#                 $7$,20,60,50\r\n\r\n#Create a calibration time series data CSV that looks like this (without the comment sign #):\r\n#Date      ,(CFS)\r\n#1/1/07 0:01,0.08\r\n#1/1/07 0:02,0.22\r\n#1/1/07 0:03,0.38\r\n#1/1/07 0:04,0.54\r\n#1/1/07 0:05,0.67\r\n#1/1/07 0:06,0.83\r\n\r\n#REMEMBER YOU HAVE TO USE DOUBLE BACKSLASHES FOR ALL FILENAMES##########\r\n#You have to manually create all directories you provide.  RSWMM does not make directories.\r\n\r\n\r\n\r\n\r\n#Preliminaries: clear workspace and source the RSWMM code for a function library\r\nrm(list=ls())\r\n#edit this source line to reflect where you have saved RSWMM.r.\r\nsource(\"O:\\\\departments\\\\Water Quality\\\\Users\\\\Peter\\\\programs\\\\RSWMM\\\\RSWMM.r\")\r\n\r\n#If you are doing a calibration run, you need to provide the following lines\r\n# to direct the optimizer to your files\r\n#Calibration Data should be in a CSV with datetimes in the first column,\r\n#and data in the second column\r\n#The text file is assumed to have a one line header\r\n#Call this function with the correct dateFormat for your datetimes\r\n#the dateFormat is passed to strptime, so look for formatting information there\r\n#for example, dates like this 1/1/07 12:00, can be read with the default dateFormat\r\n#e.g.:\r\n#Date      ,(CFS)\r\n#1/1/07 0:01,0.08\r\n#1/1/07 0:02,0.22\r\n#1/1/07 0:03,0.38\r\n#1/1/07 0:04,0.54\r\n#1/1/07 0:05,0.67\r\n#1/1/07 0:06,0.83\r\n#\r\ncalDataCSV=\"O:\\\\departments\\\\Water Quality\\\\Users\\\\Peter\\\\programs\\\\RSWMM\\\\testingData\\\\CalData1.csv\"\r\n\r\n#if you have a non-stadard date format, you can provide that as an argument below, but in either case\r\n# you have to call the function that reads the calData\r\n#getCalDataFromCSV(CSVFile=calDataCSV,dateFormat=\"%m/%d/%y %H:%M\")\r\ncalDataObj<-getCalDataFromCSV(CSVFile=calDataCSV)\r\n\r\n\r\n\r\n#Provide a path for the CSV containing optimization history.  This is an empty file to start out.\r\n#Make sure you have created the directories that will hold this file\r\noptFile=\"O:\\\\departments\\\\Water Quality\\\\Users\\\\Peter\\\\programs\\\\RSWMM\\\\testingData\\\\Optimization History.csv\"\r\n\r\n\r\n#Provide a path for the CSV containing parameter bounds\r\n#For ease, make your parameter bounds file in this format (without the comment symbols):\r\n#                 Code,Minimum,Maximum,Initial\r\n#                 $1$,10,32,15\r\n#                 $2$,10,31,20\r\n#                 $3$,4,15,5\r\n#                 $4$,2,8,7\r\n#                 $5$,25,100,33\r\n#                 $6$,20,75,33\r\n#                 $7$,20,60,50\r\nparFile=\"O:\\\\departments\\\\Water Quality\\\\Users\\\\Peter\\\\programs\\\\RSWMM\\\\testingData\\\\Parameter Ranges 1.csv\"\r\nparametersTable=getParmeterBounds(parFile)\r\n\r\n\r\n#Initialize the iteration count and the optimization history, in case you\r\n#want to stop the model before the optimization function is complete. If you\r\n# press the STOP button before the optimzation function returns, you can check your\r\n#csv provided above or the variable optimizationHistory for intermediate results\r\n\r\niteration=1\r\noptimizationHistory=data.frame()\r\n\r\n\r\n#Select single or multiobjective optimization by setting one of the two following variables to TRUE\r\n#Set useOptim to TRUE if you are doing single objective optimization, otherwise FALSE\r\nuseOptim=FALSE\r\n#set useMCO to TRUE if you are doing multiobjective optimization, otherwise FALSE\r\nuseMCO=TRUE\r\n\r\n\r\n##################################################################################\r\n#######################Single Objective Calibration Begins Here##################\r\n#####################################################################################\r\n#If you are doing multi-objective optimization, this section is ignored\r\n\r\n\r\n#Provide options for single objective optimization\r\n#Initialize the options object\r\noptimOpt={}\r\n\r\n#Pick one of six methods for calibration:\r\n# may be one of  = c(\"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\", \"Brent\"),\r\noptimOpt$method =\"SANN\"\r\n#Look at the documentation in RSWMM.R for the getSWMMTimeSeriesData function\r\n#to develop a function call that returns your time series\r\n# of interest from the SWMM binary file\r\n# a few notes on this funtion:\r\n#you always have to pass in headobj=headobj.  This is so that you don't reread the header on every iteration\r\n#you select an iType, which determines whether you are looking for a node, link, subcatchment, or system variable\r\n#you provide a vIndex, which is the parameter you want to return (e.g. depth)\r\n#you provide the nameInOutputFile.  This will be the same as the node, link, or subcatchment number in the input file.\r\n#if you are getting a system variable's results, you can leave nameInOutputFile as \"\"\r\n#you should provide a function call in quotes that will subsequently be evaled in the objective function\r\noptimOpt$functionCallToEvalForASWMMTimeSeries='getSWMMTimeSeriesData(headObj=headObj,iType=3,nameInOutputFile=\"\",vIndex=4)'\r\n\r\n#Put the parameter bounds and intialization in the optimization options: you shouldn't need to change these\r\n# lines if you have imported them using RSWMM formats/functions\r\noptimOpt$lower= c(as.vector(parametersTable[\"Minimum\"]))$Minimum\r\noptimOpt$upper=c(as.vector(parametersTable[\"Maximum\"]))$Maximum\r\noptimOpt$initial=c(as.vector(parametersTable[\"Initial\"]))$Initial\r\n#Provide a base name for the input/output files that are created\r\n#RSWMM will add the necessary extensions.  It also adds random text so that it is thread safe, and\r\n# you can run more than one RSWMM.r optimization at the same time\r\noptimOpt$baseOutputName=\"O:\\\\departments\\\\Water Quality\\\\Users\\\\Peter\\\\programs\\\\RSWMM\\\\testingData\\\\OptTest1\\\\Opt Ex1 Post\"\r\n#Provide a SWMM template file that has the replacement codes\r\noptimOpt$SWMMTemplateFile=\"O:\\\\departments\\\\Water Quality\\\\Users\\\\Peter\\\\programs\\\\RSWMM\\\\testingData\\\\Example1-Post.inp\"\r\n#Provide a path to SWMM.exe.  The binary file reader is written for SWMM 5.0.022.  For earlier versions of SWMM,\r\n# you would have to edit the binary file reader because the output format has changed.\r\noptimOpt$SWMMexe=\"C:\\\\Program Files (x86)\\\\EPA SWMM 5.0\\\\SWMM5.exe\"\r\n#Look at RSWMM.R's performanceStatsAsMinimization function and select one of the performance statistics\r\noptimOpt$performanceStat=\"sumOfSquaredError\"\r\n\r\n#The following function call does the optimization.  It should not need any edits,\r\n#unless you want to look at the optim function documentation and provide more specific\r\n# control parameters.\r\n\r\n#set the working directory in R to be the directory of the swmm template so that LID reports \r\n#show up in the right place #this is a 1/24/2012 edit\r\nsetwd(dirname(optimOpt$SWMMTemplateFile))\r\n\r\nif(useOptim){\r\n  out=optim(optimOpt$initial,objectiveFunction,\r\n  gr = NULL, baseOutputName= optimOpt$baseOutputName,\r\n     SWMMTemplateFile=optimOpt$SWMMTemplateFile,\r\n     SWMMexe=optimOpt$SWMMexe,\r\n       functionCallToEvalForASWMMTimeSeries=optimOpt$functionCallToEvalForASWMMTimeSeries,\r\n     performanceStat=optimOpt$performanceStat,\r\n      method = optimOpt$method,\r\n      lower = optimOpt$lower, upper = optimOpt$upper,\r\n      control = list(), hessian = FALSE)\r\n}\r\n\r\n#################################################################################\r\n#########################End of Single Objective Calibration Section#############\r\n#################################################################################\r\n\r\n\r\n\r\n\r\n\r\n\r\n##################################################################################\r\n######################### Start of Multiobjective Optimization ##################\r\n#################################################################################\r\n#If you are doing single objective optimization by setting useOptim to TRUE, this\r\n#section is ignored.\r\n\r\n\r\n\r\n\r\n\r\n#initialize the multiobjective optimization options object\r\nmcoOpt={}\r\n#Look at the documentation in RSWMM.R for the getSWMMTimeSeriesData function\r\n#to develop a function call that returns your time series\r\n# of interest from the SWMM binary file\r\n# a few notes on this funtion:\r\n#you always have to pass in headobj=headobj.  This is so that you don't reread the header on every iteration\r\n#you select an iType, which determines whether you are looking for a node, link, subcatchment, or system variable\r\n#you provide a vIndex, which is the parameter you want to return (e.g. depth)\r\n#you provide the nameInOutputFile.  This will be the same as the node, link, or subcatchment number in the input file.\r\n#if you are getting a system variable's results, you can leave nameInOutputFile as \"\"\r\n#you should provide a function call in quotes that will subsequently be evaled in the objective function\r\nmcoOpt$functionCallToEvalForASWMMTimeSeries='getSWMMTimeSeriesData(headObj=headObj,iType=3,nameInOutputFile=\"\",vIndex=4)'\r\n#Provide upper and lower bounds.  No need to edit these lines if you have imported parameters using RSWMM functions/formats\r\nmcoOpt$lower=c(as.vector(parametersTable[\"Minimum\"]))$Minimum\r\nmcoOpt$upper=c(as.vector(parametersTable[\"Maximum\"]))$Maximum\r\n#Provide path to SWMM.exe\r\nmcoOpt$SWMMexe=\"C:\\\\Program Files (x86)\\\\EPA SWMM 5.0\\\\SWMM5.exe\"\r\n#Select one or more performance stats listed in RSWMM.R\r\nmcoOpt$performanceStats=c(\"sumOfSquaredError\",\"linearCorrelationTimesMinus1\")\r\n#Provide a base output name for SWMM input/output files\r\nmcoOpt$baseOutputName=\"O:\\\\departments\\\\Water Quality\\\\Users\\\\Peter\\\\programs\\\\RSWMM\\\\testingData\\\\OptTest1\\\\Opt Ex1 Post\"\r\n#Provide a path to your SWMM template file with replacement codes in it\r\nmcoOpt$SWMMTemplateFile=\"O:\\\\departments\\\\Water Quality\\\\Users\\\\Peter\\\\programs\\\\RSWMM\\\\testingData\\\\Example1-Post.inp\"\r\n#set the working directory in R to be the directory of the swmm template so that LID reports \r\n#show up in the right place #this is a 1/24/2012 edit\r\nsetwd(dirname(mcoOpt$SWMMTemplateFile))\r\n\r\n#This is the function call to NSGA2.  Change this if\r\n# you want to further control the process.  (See the documentation for mco package: NSGS2 function)\r\nif(useMCO){\r\n  library(mco)\r\n  out= nsga2(objectiveFunction,\r\n            idim=length(mcoOpt$lower),\r\n            odim=length(mcoOpt$performanceStats),\r\n            baseOutputName= mcoOpt$baseOutputName,\r\n            SWMMTemplateFile=mcoOpt$SWMMTemplateFile,\r\n            SWMMexe=mcoOpt$SWMMexe,\r\n            functionCallToEvalForASWMMTimeSeries=mcoOpt$functionCallToEvalForASWMMTimeSeries,\r\n            performanceStat=mcoOpt$performanceStats,\r\n            generations=500,\r\n            lower.bounds=as.real(mcoOpt$lower),\r\n            upper.bounds=as.real(mcoOpt$upper),\r\n            constraints=NULL)\r\n}\r\n\r\n##################################################################################\r\n########################END of multiobjective optimization########################\r\n##################################################################################\r\n</pre>\r\n","google":"UA-58799823-1","note":"Don't delete this file! It's used internally to help with page regeneration."}